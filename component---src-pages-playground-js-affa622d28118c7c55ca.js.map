{"version":3,"sources":["webpack:///./src/pages/playground.js","webpack:///./src/data/events/events.js","webpack:///./src/data/events/combined.png","webpack:///./src/data/events/hoth.png","webpack:///./src/components/bigdate/BigDate.js","webpack:///./src/components/eventcard/eventcard.js","webpack:///./src/components/eventlist/eventcardgriditem.js","webpack:///./src/components/eventlist/eventlist.js","webpack:///./src/components/eventpage/eventpage.js"],"names":["PlayGround","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_headfooter_headfooter__WEBPACK_IMPORTED_MODULE_2__","_components_eventpage_eventpage__WEBPACK_IMPORTED_MODULE_3__","style","height","React","Component","_combined_png__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","_combined_png__WEBPACK_IMPORTED_MODULE_0___default","n","_hoth_png__WEBPACK_IMPORTED_MODULE_1__","_hoth_png__WEBPACK_IMPORTED_MODULE_1___default","events","name","date","Date","location","imgURL","Imgg","detailLink","HOTH","module","exports","p","BigDate","_ref","classes","dateObj","moment","month","format","day","react_default","className","container","Typography","variant","color","component","root","propTypes","PropTypes","object","isRequired","withStyles","theme","textAlign","display","flexDirection","alignItems","width","fontSize","typography","fontWeight","fontWeightLight","lineHeight","EventCard","_classNames","disabled","_useState","useState","isHover","setIsHover","dateStr","calendar","Card","raised","elevation","classNames","greyOverlay","onMouseEnter","onMouseLeave","CardMedia","image","banner","CardContent","Grid","spacing","item","xs","bigdate_BigDate","eventName","details","CardActions","buttonArea","Link","href","underline","Button","size","string","instanceOf","bool","defaultProps","position","borderRadius","shape","&:after","backgroundColor","transitionDuration","transitions","duration","standard","transitionTimingFunction","easing","easeInOut","content","pointerEvents","top","left","objectFit","fontFamily","margin","bottom","right","padding","EventCardGridItem","event","concealed","props","objectWithoutPropertiesLoose_default","isFocus","setIsFocus","_useState2","Object","assign","onFocus","onBlur","eventcard","EventList","eventCards","map","e","eventcardgriditem","key","justify","arrayOf","cardMargin","cardWidthWithMargin","numCardsForEachSize","breakpoints","keys","widthKey","totalWidth","cardWidth","numCardFitted","Math","floor","numCardFittingIn","values","conatinerWidths","forEach","idx","only","maxWidth","getPastEvents","today","hour","minute","second","filter","EventPage","pastEvents","eventsData","futureEvents","x","indexOf","Fragment","align","headline","eventlist"],"mappings":"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","file":"component---src-pages-playground-js-affa622d28118c7c55ca.js","sourcesContent":["import React from 'react';\n\nimport HeadFooter from '../components/headfooter/headfooter';\n// import Eventcard from '../components/eventcard/eventcard';\nimport EventPage from '../components/eventpage/eventpage';\n\nexport default class PlayGround extends React.Component {\n\trender() {\n\t\treturn (\n\t\t\t<HeadFooter>\n\t\t\t\t<EventPage />\n\t\t\t\t<div style={{ height: '1000px' }}></div>\n\t\t\t</HeadFooter>\n\t\t);\n\t}\n}\n","\nimport Imgg from './combined.png';\nimport HOTH from './hoth.png';\n/**\n * Month starts at 0!\n */\nconst events = [\n\t{\n\t\tname: 'HackSchool Session 1',\n\t\tdate: new Date(2019, 8, 27, 18, 0),\n\t\tlocation: 'Engineering VI 256',\n\t\timgURL: Imgg,\n\t\tdetailLink: '/posts/spring2019/learnpy3'\n\t},\n\t{\n\t\tname: 'HackSchool Session 2',\n\t\tdate: new Date(2019, 9, 3, 18, 0),\n\t\tlocation: 'Engineering VI 256',\n\t\timgURL: Imgg,\n\t\tdetailLink: '/posts/spring2019/learnpy3'\n\t},\n\t{\n\t\tname: 'Hack on the Hill',\n\t\tdate: new Date(2019, 10, 3, 8, 0),\n\t\tlocation: 'Carnesale Commons',\n\t\timgURL: Imgg,\n\t\tdetailLink: '/posts/spring2019/learnpy3'\n\t},\n\t{\n\t\tname: 'Learn.py Session 4',\n\t\tdate: new Date(),\n\t\tdetailLink: 'https://www.google.com',\n\t\tlocation: 'Covel 227',\n\t\timgURL: HOTH\n\t},\n\t{\n\t\tname: 'HackSchool Session 3',\n\t\tdate: new Date(2019, 9, 14, 19, 0),\n\t\tlocation: 'Engineering VI 256',\n\t\timgURL: Imgg\n\t}\n];\n\nexport default events;\n","module.exports = __webpack_public_path__ + \"static/combined-81638648aae72b2ddc71ec32a0d9db19.png\";","module.exports = __webpack_public_path__ + \"static/hoth-0e50837c8a8dbd4a3d464c402dbdda3f.png\";","import React from 'react';\nimport moment from 'moment';\nimport Typography from '@material-ui/core/Typography';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\n\nconst styles = theme => ({\n\tcontainer: {\n\t\ttextAlign: 'center',\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\twidth: 'fit-content'\n\t},\n\tday: {\n\t\tfontSize: theme.typography.fontSize * 24 / 16,\n\t\tfontWeight: theme.typography.fontWeightLight,\n\t\tlineHeight: 0.8\n\t}\n});\n\nfunction BigDate({ date, classes }) {\n\tconst dateObj = moment(date);\n\tconst month = dateObj.format('MMM');\n\tconst day = dateObj.format('D');\n\treturn (\n\t\t<div className={classes.container}>\n\t\t\t<Typography variant=\"body1\" color=\"secondary\" component=\"span\">\n\t\t\t\t{month}\n\t\t\t</Typography>\n\t\t\t<Typography variant=\"body1\" classes={{ root: classes.day }} component=\"span\">\n\t\t\t\t{day}\n\t\t\t</Typography>\n\t\t</div>\n\t);\n}\n\nBigDate.propTypes = {\n\tdate: PropTypes.object.isRequired,\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(BigDate);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport classNames from 'classnames';\n\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n\nimport BigDate from '../bigdate/BigDate';\n\nconst styles = theme => ({\n\tcontainer: {\n\t\tposition: 'relative',\n\t\theight: '100%',\n\t\tborderRadius: theme.shape.borderRadius * 2,\n\t\t'&:after': {\n\t\t\t// relative to this container\n\t\t\tposition: 'absolute',\n\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0)',\n\t\t\t// transition for backgroundColor\n\t\t\ttransitionDuration: theme.transitions.duration.standard,\n\t\t\ttransitionTimingFunction: theme.transitions.easing.easeInOut,\n\t\t\tcontent: '\"\"',\n\t\t\twidth: '100%',\n\t\t\theight: '100%',\n\t\t\t// prevent pseudo element from capturing click event\n\t\t\tpointerEvents: 'none',\n\t\t\ttop: 0,\n\t\t\tleft: 0\n\t\t}\n\t},\n\tgreyOverlay: {\n\t\t'&:after': {\n\t\t\tbackgroundColor: 'rgba(255, 255, 255, 0.4)'\n\t\t}\n\t},\n\tbanner: {\n\t\theight: '200px',\n\t\t// adjust image to cover the entire box\n\t\tobjectFit: 'cover'\n\t},\n\teventName: {\n\t\tfontFamily: ['Poppins', 'sans-serif'],\n\t\tmargin: theme.spacing(0),\n\t\tfontSize: theme.typography.fontSize / 14 * 24\n\t},\n\tdetails: {\n\t\tfontSize: theme.typography.fontSize / 16 * 14\n\t},\n\tbuttonArea: {\n\t\t// relative to the container class above\n\t\tposition: 'absolute',\n\t\tbottom: 0,\n\t\tright: 0,\n\t\t// to align with the padding in `CardContent`\n\t\t// which is by default theme.spacing(2)\n\t\tpadding: theme.spacing(2)\n\t}\n});\n\nfunction EventCard({\n\tname,\n\tdate,\n\tlocation,\n\tdetailLink,\n\timgURL,\n\tdisabled,\n\tclasses\n}) {\n\tconst [isHover, setIsHover] = useState(false);\n\tconst dateStr = moment(date).calendar();\n\treturn (\n\t\t<Card\n\t\t\traised\n\t\t\televation={isHover ? 11 : 6}\n\t\t\tclassName={classNames(classes.container, { [classes.greyOverlay]: disabled })}\n\t\t\tonMouseEnter={() => setIsHover(true)}\n\t\t\tonMouseLeave={() => setIsHover(false)}\n\t\t>\n\t\t\t<CardMedia\n\t\t\t\timage={imgURL}\n\t\t\t\tclasses={{ root: classes.banner }}\n\t\t\t/>\n\t\t\t<CardContent>\n\t\t\t\t<Grid container spacing={2} alignItems=\"center\">\n\t\t\t\t\t<Grid item xs={12}> <BigDate date={date} /> </Grid>\n\t\t\t\t\t<Grid item>\n\t\t\t\t\t\t<Typography classes={{ root: classes.eventName }} variant=\"h3\">\n\t\t\t\t\t\t\t{name}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<Typography variant=\"body1\" component=\"span\" classes={{ root: classes.details }}>\n\t\t\t\t\t\t\t{`${dateStr} · ${location}`}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n\t\t\t</CardContent>\n\t\t\t<CardActions className={classes.buttonArea}>\n\t\t\t\t<Link href={detailLink} underline=\"none\">\n\t\t\t\t\t<Button variant=\"outlined\" size=\"small\" disabled={!detailLink}>\n\t\t\t\t\t\tLearn More\n\t\t\t\t\t</Button>\n\t\t\t\t</Link>\n\t\t\t</CardActions>\n\t\t</Card>\n\t);\n}\n\nEventCard.propTypes = {\n\tname: PropTypes.string.isRequired,\n\timgURL: PropTypes.string.isRequired,\n\tdate: PropTypes.instanceOf(Date).isRequired,\n\tlocation: PropTypes.string.isRequired,\n\t// link might not be available yet\n\tdetailLink: PropTypes.string,\n\tdisabled: PropTypes.bool.isRequired,\n\tclasses: PropTypes.object.isRequired\n};\n\nEventCard.defaultProps = {\n\tdisabled: false\n};\n\nexport default withStyles(styles)(EventCard);\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Grid from '@material-ui/core/Grid';\n\nimport EventCard from '../eventcard/eventcard';\n\nfunction EventCardGridItem({\n\tevent,\n\tconcealed,\n\t...props\n}) {\n\t// for mobile user, hover event is not supported.\n\t// so we use focus instead, when user click on\n\t// the element, it disables greyout.\n\tconst [isFocus, setIsFocus] = useState(false);\n\tconst [isHover, setIsHover] = useState(false);\n\treturn (\n\t\t<Grid\n\t\t\titem\n\t\t\tonMouseEnter={() => setIsHover(true)}\n\t\t\tonMouseLeave={() => setIsHover(false)}\n\t\t\tonFocus={() => setIsFocus(true)}\n\t\t\tonBlur={() =>\tsetIsFocus(false)}\n\t\t\t{...props}\n\t\t>\n\t\t\t<EventCard {...event} disabled={concealed ? !isFocus && !isHover : false} />\n\t\t</Grid>\n\t);\n}\n\nEventCardGridItem.propTypes = {\n\tevent: PropTypes.object.isRequired,\n\tconcealed: PropTypes.bool.isRequired\n};\n\nexport default EventCardGridItem;\n","\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Grid, withStyles } from '@material-ui/core';\n\nimport EventCardGridItem from './eventcardgriditem';\n\nconst numCardFittingIn = (totalWidth, cardWidth) => {\n\tconst numCardFitted = Math.floor(totalWidth / cardWidth);\n\t// we want to at least contain one card even if screen is too small\n\treturn numCardFitted === 0 ? 1 : numCardFitted;\n};\n\nconst styles = theme => {\n\tconst cardMargin = theme.spacing(2);\n\tconst cardWidth = 260;\n\tconst cardWidthWithMargin = cardMargin * 2 + cardWidth;\n\n\t// Calculate how many cards can fit in a certain screen size.\n\t// The screen size are provided by material-UI\n\tconst numCardsForEachSize = theme.breakpoints.keys.map(widthKey =>\n\t\tnumCardFittingIn(theme.breakpoints.values[widthKey], cardWidthWithMargin));\n\n\t// for each screen size, we set the width of the container\n\t// to just fit all the cards. Fixing container's width so\n\t// its size is not 100% of parents. Therefore, we can center\n\t// it using margin auto.\n\t// We uses maxWidth since parent container can impose a size\n\t// limit that we do not want to overthrow.\n\tconst conatinerWidths = {};\n\ttheme.breakpoints.keys.forEach((key, idx) => {\n\t\tconatinerWidths[theme.breakpoints.only(key)] = {\n\t\t\tmaxWidth: `${numCardsForEachSize[idx] * cardWidthWithMargin}px`\n\t\t};\n\t});\n\treturn {\n\t\tcontainer: {\n\t\t\t...conatinerWidths,\n\t\t\t// self centered\n\t\t\tmargin: '0 auto'\n\t\t},\n\t\titem: {\n\t\t\twidth: `${cardWidth}px`,\n\t\t\theight: '420px',\n\t\t\tmargin: cardMargin\n\t\t}\n\t};\n};\n\nfunction EventList({ events, classes }) {\n\tconst eventCards = events.map(e =>\n\t\t<EventCardGridItem\n\t\t\tkey={e.name}\n\t\t\tclassName={classes.item}\n\t\t\tevent={e}\n\t\t/>);\n\n\treturn (\n\t\t<Grid container justify=\"flex-start\" className={classes.container}>\n\t\t\t{eventCards}\n\t\t</Grid>\n\t);\n}\n\nEventList.propTypes = {\n\tevents: PropTypes.arrayOf(Object).isRequired,\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EventList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Typography from '@material-ui/core/Typography';\nimport moment from 'moment';\nimport { withStyles } from '@material-ui/core';\n\nimport eventsData from '../../data/events/events';\nimport EventList from '../eventlist/eventlist';\n\nconst styles = theme => ({\n\theadline: {\n\t\t// fontFamily: theme.typography.fontFamily,\n\t\tfontWeight: 500,\n\t\tmargin: theme.spacing(2, 0)\n\t}\n});\n\n/**\n * @returns events that has passed.\n * Past is defined as happened before today.\n * Meaning, if an event was today at 2pm but it is 5pm,\n * the event is NOT considered \"past\".\n */\nconst getPastEvents = events => {\n\tconst today = moment().hour(0).minute(0).second(0);\n\treturn events.filter(event => moment(event.date) < today);\n};\n\nfunction EventPage({ classes }) {\n\tconst pastEvents = getPastEvents(eventsData);\n\t// pastEvents are references to the same object\n\t// therefore we can use indexOf.\n\tconst futureEvents = eventsData.filter(x =>\n\t\tpastEvents.indexOf(x) === -1);\n\n\treturn (\n\t\t<>\n\t\t<Typography variant=\"h3\" align=\"center\" className={classes.headline}>\n\t\t\tUpcoming\n\t\t</Typography>\n\t\t<EventList events={futureEvents} />\n\t\t<Typography variant=\"h3\" align=\"center\" className={classes.headline}>\n\t\t\tPast\n\t\t</Typography>\n\t\t<EventList events={pastEvents} />\n\t\t</>\n\t);\n}\n\nEventPage.propTypes = {\n\tclasses: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(EventPage);\n"],"sourceRoot":""}